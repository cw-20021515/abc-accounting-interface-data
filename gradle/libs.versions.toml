[versions]
# SpringBoot
spring-boot = "3.2.3"
spring-boot-dependency-management = "1.1.4"

# spring
spring-tx = "6.1.2"
spring-security = "6.3.1"

# Spring Cloud
spring-cloud = "2023.0.2"

# logging
kotlin-logging = "3.0.5"
slf4j = "2.0.9"
logback = "1.4.6"
jul-to-slf4j = "2.0.9"

# observability
feign-micrometer = "13.1"

#feign
feign-core = "13.2.1"
feign-form = "3.8.0"
feign-jackson = "13.2.1"

# util
kotlinx-serialization-json = "1.6.2"
json = "20231013"
commons-lang3 = "3.14.0"
commons-text = "1.11.0"
jackson-module-kotlin = "2.15.2"
jackson-dataformat-yaml = "2.15.2"
jvm-convert = "3.3.2"
commons-codec = "1.16.1"
hashids = "1.0.3"
hypersistence-utils-hibernate-63 = "3.7.5"

# Kotlin
kotlin = "1.9.22"

# Java
jvm = "21"

# JUnit
junit = "5.9.1"

#open api
openapi-generator-gradle-plugin = "7.2.0"
swagger-annotations = "2.2.20"

# kotest
kotest="5.9.1"
kotest-extensions-spring="1.3.0"
kotest-extensions-testcontainers="2.0.2"
kotest-extensions-mockserver = "1.3.0"
mockk = "1.9"
testcontainers = "1.19.0"

[libraries]
# spring boot
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
spring-boot-starter-thymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-security-bom = { module = "org.springframework.security:spring-security-bom", version.ref = "spring-security" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "spring-boot" }
spring-boot-starter-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose", version.ref = "spring-boot" }

spring-tx = { module = "org.springframework:spring-tx", version.ref = "spring-tx" }

# feign
feign-core = { module = "io.github.openfeign:feign-core", version.ref = "feign-core" }
feign-form = { module = "io.github.openfeign.form:feign-form", version.ref = "feign-form" }
feign-jackson = { module = "io.github.openfeign:feign-jackson", version.ref = "feign-jackson" }

# spring cloud
spring-cloud-dependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud" }

# logging
kotlin-logging-jvm = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "kotlin-logging" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
jul-to-slf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "jul-to-slf4j" }

# micrometer
feign-micrometer = { module = "io.github.openfeign:feign-micrometer", version.ref = "feign-micrometer" }

# util
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
json = { module = "org.json:json", version.ref = "json" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
commons-text = { module = "org.apache.commons:commons-text", version.ref = "commons-text" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }
hashids = { module = "org.hashids:hashids", version.ref = "hashids" }
hypersistence-utils-hibernate-63 = { module = "io.hypersistence:hypersistence-utils-hibernate-63", version.ref = "hypersistence-utils-hibernate-63" }

# jackson
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson-dataformat-yaml" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson-module-kotlin" }

# kotlin
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }

openapi-generator-gradle-plugin = { module = "org.openapitools:openapi-generator-gradle-plugin", version.ref = "openapi-generator-gradle-plugin" }
swagger-annotations = { module = "io.swagger.core.v3:swagger-annotations", version.ref = "swagger-annotations" }

# kotest
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-assertions-json = { module = "io.kotest:kotest-assertions-json", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-extensions-junitxml-jvm = { module = "io.kotest:kotest-extensions-junitxml-jvm", version.ref = "kotest" }
kotest-extensions-spring = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotest-extensions-spring" }
kotest-extensions-testcontainers = { module = "io.kotest.extensions:kotest-extensions-testcontainers", version.ref = "kotest-extensions-testcontainers" }
kotest-extensions-mockserver = { module = "io.kotest.extensions:kotest-extensions-mockserver", version.ref = "kotest-extensions-mockserver" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }

# test
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }

[bundles]
spring-boot = ["spring-boot-starter", "spring-boot-starter-actuator", "spring-boot-starter-aop", "spring-boot-starter-web", "spring-boot-starter-validation", "spring-boot-starter-redis","spring-boot-starter-jpa"]
spring-test = ["spring-boot-starter-test"]
spring-thymeleaf = ["spring-boot-starter-thymeleaf"]
logging = ["kotlin-logging-jvm", "slf4j-api", "logback-classic", "jul-to-slf4j"]
utils = ["kotlinx-serialization-json", "json", "commons-lang3", "commons-text", "commons-codec", "hashids", "hypersistence-utils-hibernate-63"]
feign = ["feign-core", "feign-jackson", "feign-form"]
jackson = ["jackson-dataformat-yaml", "jackson-module-kotlin"]
junit = ["junit-bom"]
kotest = ["kotest-runner-junit5","kotest-assertions-core","kotest-assertions-json","kotest-property","kotest-extensions-junitxml-jvm","kotest-extensions-spring","kotest-extensions-testcontainers","kotest-extensions-mockserver"]
mockk = ["mockk"]
testcontainers = ["testcontainers","testcontainers-postgresql", "testcontainers-junit-jupiter"]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-boot-dependency-management" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-plugin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jvm-convert = { id = "org.asciidoctor.jvm.convert", version.ref = "jvm-convert" }
